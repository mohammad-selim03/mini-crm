generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  clients   Client[]
  projects  Project[]
  logs      InteractionLog[]
  reminders Reminder[]
}

model Client {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  name      String
  email     String
  phone     String
  company   String?
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projects  Project[]
  logs      InteractionLog[]
  reminders Reminder[]
}

model Project {
  id        String   @id @default(cuid())
  title     String
  budget    Float
  deadline  DateTime
  status    String
  client    Client   @relation(fields: [clientId], references: [id])
  clientId  String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  logs      InteractionLog[]
  reminders Reminder[]
}

model InteractionLog {
  id         String   @id @default(cuid())
  date       DateTime
  type       String
  notes      String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  client     Client?  @relation(fields: [clientId], references: [id])
  clientId   String?
  project    Project? @relation(fields: [projectId], references: [id])
  projectId  String?
}

model Reminder {
  id         String   @id @default(cuid())
  dueDate    DateTime
  notes      String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  client     Client?  @relation(fields: [clientId], references: [id])
  clientId   String?
  project    Project? @relation(fields: [projectId], references: [id])
  projectId  String?
}
